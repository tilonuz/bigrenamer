# (c) @UniBorg

from telethon import events
import asyncio
from collections import deque


@borg.on(events.NewMessage(pattern=r"\.moon animation", outgoing=True))
async def _(event):
	if event.fwd_from:
		return
	deq = deque(list('ğŸŒ—ğŸŒ˜ğŸŒ‘ğŸŒ’ğŸŒ“ğŸŒ”ğŸŒ•ğŸŒ–'))
for _ in range(32):
    await asyncio.sleep(0.1)
    await client.edit_message(event.to_id, message=event.id, text=''.join(deq))
    deq.rotate(1)
for i in ('GğŸŒ—ğŸŒ˜ğŸŒ‘ğŸŒ’ğŸŒ“ğŸŒ”ğŸŒ•ğŸŒ– ã…¤',
          'GoğŸŒ˜ğŸŒ‘ğŸŒ’ğŸŒ“ğŸŒ”ğŸŒ•ğŸŒ–ã…¤ã…¤',
          'GooğŸŒ‘ğŸŒ’ğŸŒ“ğŸŒ”ğŸŒ•ğŸŒ–ã…¤ã…¤',
          'GoodğŸŒ’ğŸŒ“ğŸŒ”ğŸŒ•ğŸŒ–ã…¤ã…¤ã…¤',
          'Good ğŸŒ“ğŸŒ”ğŸŒ•ğŸŒ–ã…¤ã…¤ã…¤',
          'Good NğŸŒ”ğŸŒ•ğŸŒ–ã…¤ã…¤ã…¤ã…¤',
          'Good NiğŸŒ•ğŸŒ–ã…¤ã…¤ã…¤ã…¤',
          'Good NigğŸŒ–ã…¤ã…¤ã…¤ã…¤ã…¤',
          'Good Nighã…¤ã…¤ã…¤ã…¤ã…¤',
          'Good Nightã…¤ã…¤ã…¤ã…¤ã…¤',
          'Good Night!ã…¤ã…¤ã…¤ğŸ¦‰'):
    await asyncio.sleep(0.1)

    await client.edit_message(event.to_id, message=event.id, text='<i>{}</i>'.format(i), parse_mode='html')